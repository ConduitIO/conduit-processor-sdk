syntax = "proto3";

package processor.v1;

import "config/v1/parameter.proto";
import "opencdc/v1/opencdc.proto";

message CommandRequest {
  oneof request {
    Specify.Request specify = 1;
    Configure.Request configure = 2;
    Open.Request open = 3;
    Process.Request process = 4;
    Teardown.Request teardown = 5;
  }
}
message CommandResponse {
  oneof response {
    Error error = 1;

    Specify.Response specify = 2;
    Configure.Response configure = 3;
    Open.Response open = 4;
    Process.Response process = 5;
    Teardown.Response teardown = 6;
  }
}

message Specify {
  message Request {}
  message Response {
    // Name is the name of the plugin.
    string name = 1;
    // Summary is a brief description of the plugin and what it does,
    // ideally not longer than one sentence.
    string summary = 2;
    // Description is a longer form field, appropriate for README-like
    // text that the author can provide for documentation about the
    // usage of the plugin.
    string description = 3;
    // Version string. Should follow semantic versioning and use the "v"
    // prefix (e.g. v1.23.4).
    string version = 4;
    // Author declares the entity that created or maintains this plugin.
    string author = 5;
    // A map that describes parameters available for configuring the
    // processor plugin.
    map<string, config.v1.Parameter> parameters = 6;
  }
}

message Configure {
  message Request {
    map<string, string> parameters = 1;
  }

  message Response {}
}

message Open {
  message Request {}
  message Response {}
}

message Process {
  message Request {
    repeated opencdc.v1.Record records = 1;
  }
  message Response {
    repeated ProcessedRecord records = 1;
  }

  message ProcessedRecord {
    oneof record {
      opencdc.v1.Record single_record = 1;
      FilterRecord filter_record = 2;
      ErrorRecord error_record = 3;
      MultiRecord multi_record = 4;
    }
  }

  message FilterRecord {}
  message ErrorRecord {
    Error error = 1;
  }
  message MultiRecord {
    repeated opencdc.v1.Record records = 1;
  }
}

message Teardown {
  message Request {}
  message Response {}
}

message Error {
  uint32 code = 1;
  string message = 2;
}
